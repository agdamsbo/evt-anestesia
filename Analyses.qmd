---
title: "Interim analyses"
date: last-modified
format: docx
editor: source
execute: 
  echo: false
---

```{r setup}
source(here::here("R/functions.R"))
source(here::here("R/data_ready.R"))
```

## Baseline characteristics

Below are the initial baseline characteristics stratified by smooth PACU transfer or not.

```{r}
## Get updated data points, merge with original
```



```{r}
#| message: false
#| warning: false
tbl1 <- ds_all |>
  dplyr::filter(!is.na(extubation_novent)) |>
  # dplyr::mutate(pacu_saox_last=as.numeric(pacu_saox_last)) |>
  dplyr::select( # forloebid,
    # extubation_novent,
    event,
    age,
    female,
    hypertension,
    diabetes,
    tci,
    ais,
    afib,
    ami,
    pad,
    smoking,
    alc_above,
    living_alone,
    nihss,
    mrs_pre,
    # tidyselect::ends_with("timediff"),
    location,
    compl_any,
    tici,
    # pacu_extend,
    # pacu_delay_reason,
    # icu_direct,
    # pacu_saox_first,
    # pacu_mabp_first,
    # pacu_saox_last,
    # pacu_mabp_last,
    # pacu_ox_req,
    # pacu_events_type,
    # pacu_extend_type,
    nihss_24h,
    pneumonia,
    # ward_events_type,
    # ward_events_other,
    mrs_3mdr,
    mors_hospital
  ) |>
  labelling_data() |>
  gtsummary::tbl_summary(
    by = event,
    # type = list(c(
    #   pacu_saox_first,
    #   pacu_mabp_first,
    #   pacu_saox_last,
    #   pacu_mabp_last,
    #   pacu_ox_req
    # ) ~ "continuous2"),
    # digits = list(c(
    #   pacu_saox_first,
    #   pacu_mabp_first,
    #   pacu_saox_last,
    #   pacu_mabp_last,
    #   pacu_ox_req
    # ) ~ 0),
    statistic = list(
      gtsummary::all_continuous() ~ "{median} ({p25}, {p75})",
      gtsummary::all_categorical() ~ "{n} ({p}%)"
    )
  ) |>
  gtsummary::add_p() |>
  gtsummary::bold_labels() |>
  gtsummary::add_overall()
# tbl1

tbl1 |>
  gtsummary::as_gt() |>
  gt::text_transform(
    locations = gt::cells_row_groups(),
    fn = function(x) {
      lapply(x, function(x) {
        gt::md(paste0("**", x, "**"))
      })
    }
  )

# tbl1 |>
#   gtsummary::as_gt() |>
#   gt::gtsave(glue::glue("tbl1_{Sys.Date()}.docx"))
```

```{r}
# pak::pak("agdamsbo/REDCapCAST")

missings_interest <- c("nihss_24h","mrs_3mdr","tici", "location", "compl_any")
key_missings <- missings_interest |> lapply(\(.x){
  is.na(ds_all[.x])
}) |> 
  dplyr::bind_cols() |> apply(1,any)

## This should be exported to 
# ds_all[key_missings,"forloebid"]

df_missing <- ds_all[c(missings_interest)] |> dplyr::mutate(is_missing = NA,mrs_3mdr=REDCapCAST::as_factor(mrs_3mdr))

meta_missing <- df_missing |>  REDCapCAST::ds2dd_detailed(form.name = "missing")

REDCapCAST::create_instrument_meta(meta_missing$meta,dir = here::here(""),record.id = FALSE)

missing_fraction <- function(data){
  NROW(data[is.na(data)])/NROW(data)
}

ds_all |> sapply(missing_fraction)

missing_map <- ds_all |> dplyr::mutate(year_date = factor(format(modafdankomst_datetime,"%Y-%m"))) |> 
  dplyr::select(tidyselect::all_of(missings_interest),year_date) 

missing_map |> missing_group_plot("year_date")
```


## mRS stratified by groups

Grotta bars of mRS shift post stroke

```{r}
ds_all |>
  dplyr::select(
    mrs_3mdr,
    extubation_novent
  ) |>
  table() |>
  rankinPlot::grottaBar(
    scoreName = "mrs_3mdr",
    groupName = "extubation_novent",
    textColor = c("black", "white"),
    # strataName = strata,
    # textCut = 6,
    # textSize = 13,
    printNumbers = "count" # ,
    # lineColor = l.color,
    # lineSize = l.size,
    # drawLines = draw.lines,
    # returnData = TRUE
  )
```


## Upload DANSTROKE and modified data

```{r}
# match("pacu_timediff",names(ds_clean))

# for (i in seq_along(ds_clean)){
#   name_label <- gsub("_"," ",names(ds_clean)[i]) |> stringr::str_to_sentence()
#   
#   if (identical("difftime",class(ds_clean[[i]]))){
#     label <- glue::glue("{name_label} ({attr(x = ds_clean[[i]], which = 'units')})")
#     
#   } else {
#     label <- name_label
#   }
#   
#   if (is.null(attributes(ds_clean[[i]]))){
#     old.attr <- list()
#   } else {
#     old.attr <- attributes(ds_clean[[i]])
#   }
#   
#   attributes(ds_clean[[i]]) <- c(old.attr,label=label)
#   
# }

# ds_upload <- ds_clean[c(1,25:ncol(ds_clean))]
# 
# dd <- REDCapCAST::ds2dd_detailed(ds_upload,form.name = "background")$meta
# dd[-1,] |> REDCapCAST::export_redcap_instrument(file = here::here("background.zip"))
# 
# ds_upload_adj <- REDCapCAST::ds2dd_detailed(ds_upload,form.name = "background")$data

# REDCapR::redcap_write(ds_upload_adj,
#                       redcap_uri = "https://redcap.rm.dk/api/",
#   token = keyring::key_get("EVT_ANEST_REDCAP_API"))
```



